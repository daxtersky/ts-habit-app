{"version":3,"sources":["src/typescript/dom-elems.ts","src/typescript/view.ts","src/typescript/enums.ts","src/typescript/model.ts","src/typescript/controller.ts"],"names":[],"mappings":";;;AAEa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAFb,IAAM,EAAa,SAAC,GAAkC,OAAA,SAAS,cAAc,IAEhE,QAAA,YAAc,CAEzB,aAA8B,EAAW,UACzC,cAA+B,EAAW,oBAC1C,gBAAiC,EAAW,kBAC5C,WAA4B,EAAW,iBACvC,mBAAoC,EAAW,qBAE/C,YAA0B,EAAW,iBAErC,mBAAsC,EAAW,iCACjD,sBAAyC,EAAW,oCACpD,sBAAyC,EAAW,gCACpD,gBAAmC,EAAW,8BAC9C,mBAAsC,EAAW,iCAEjD,eAAmC,EAAW,2BAC9C,YAAgC,EAAW,wBAE3C,qBAA4C,EAAW,gCACvD,kBAAyC,EAAW,6BAGpD,WAAyB,EAAW,gBACpC,iBAAqC,EAAW;;ACtBrC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAJb,QAAA,qBAEA,IAAA,EAAA,QAAA,eAEA,EAAA,WAQE,SAAA,IAAA,IAAA,EAAA,KAOO,KAAA,8BAAgC,WACrC,EAAA,YAAY,gBAAgB,iBAAiB,QAAS,WACpD,EAAA,YAAY,cAAc,MAAM,QAAU,OAC1C,EAAA,YAAY,WAAW,MAAM,QAAU,aAIpC,KAAA,iCAAmC,WACxC,EAAA,YAAY,mBAAmB,iBAAiB,QAAS,WACvD,EAAA,YAAY,cAAc,MAAM,QAAU,UAC1C,EAAA,YAAY,WAAW,MAAM,QAAU,UAIpC,KAAA,kBAAoB,SAAC,GAC1B,EAAA,YAAY,eAAe,iBAAiB,QAAS,WACnD,EAAQ,CACN,MAAO,EAAK,iBACZ,SAAU,EAAK,qBACf,SAAU,EAAK,0BAKd,KAAA,eAAiB,SAAC,GACvB,EAAA,YAAY,YAAY,iBAAiB,QAAS,WAChD,EAAQ,CACN,MAAO,EAAK,cACZ,SAAU,EAAK,uBA0Bd,KAAA,wBAA0B,SAAC,GAChC,EAAA,YAAY,iBAAiB,iBAAiB,QAAS,WACrD,OA9DF,SAAS,iBAAiB,QAAS,SAAA,GAAK,OAAA,EAAE,mBAC1C,EAAA,YAAY,mBAAmB,SAyEnC,OAjFE,OAAA,eAAI,EAAA,UAAA,mBAAgB,CAApB,IAAA,WAAgC,OAAA,EAAA,YAAY,mBAAmB,OAA3C,YAAA,EAFT,cAAA,IAGX,OAAA,eAAI,EAAA,UAAA,uBAAoB,CAAxB,IAAA,WAAoC,OAAA,EAAA,YAAY,sBAAsB,OAA9C,YAAA,EAHb,cAAA,IAIX,OAAA,eAAI,EAAA,UAAA,uBAAoB,CAAxB,IAAA,WAAoC,OAAA,EAAA,YAAY,sBAAsB,OAA9C,YAAA,EAJb,cAAA,IAKX,OAAA,eAAI,EAAA,UAAA,gBAAa,CAAjB,IAAA,WAA6B,OAAA,EAAA,YAAY,gBAAgB,OAAxC,YAAA,EALN,cAAA,IAMX,OAAA,eAAI,EAAA,UAAA,oBAAiB,CAArB,IAAA,WAAiC,OAAA,EAAA,YAAY,mBAAmB,OAA3C,YAAA,EANV,cAAA,IAgDJ,EAAA,UAAA,mBAAP,SAA0B,GACxB,EAAA,YAAY,qBAAqB,UAAY,EACzC,GACA,mGAGC,EAAA,UAAA,gBAAP,SAAuB,GAChB,GAGH,EAAA,YAAY,kBAAkB,UAAY,GAC1C,QAAQ,IAAI,eACZ,EAAA,YAAY,YAAY,MAAM,QAAU,OACxC,EAAA,YAAY,WAAW,MAAM,QAAU,OACvC,EAAA,YAAY,aAAa,MAAM,QAAU,OACzC,EAAA,YAAY,cAAc,MAAM,QAAU,OAC1C,EAAA,YAAY,WAAW,MAAM,QAAU,QARvC,EAAA,YAAY,kBAAkB,UAAY,gBAkBvC,EAAA,UAAA,iBAAP,SAAwB,GACjB,IACH,EAAA,YAAY,YAAY,MAAM,QAAU,OACxC,EAAA,YAAY,WAAW,MAAM,QAAU,OACvC,EAAA,YAAY,aAAa,MAAM,QAAU,UACzC,EAAA,YAAY,WAAW,MAAM,QAAU,YAI7C,EAnFA,GAAa,QAAA,KAAA;;ACMZ,aAVD,IAAY,EAKA,EAKX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,gBAAA,EAVD,SAAY,GACV,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,KAAA,GAAA,OAFF,CAAY,EAAA,QAAA,aAAA,QAAA,WAAU,KAKtB,SAAY,GACV,EAAA,EAAA,IAAA,GAAA,MACA,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,KAAA,GAAA,OAJF,CAAY,EAAA,QAAA,YAAA,QAAA,UAAS;;ACFR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAHb,IAAA,EAAA,QAAA,WAGA,EAAA,WAgDA,OA3CE,WAAA,IAAA,EAAA,KAJQ,KAAA,OAAkB,GAC1B,KAAA,cAAe,EACf,KAAA,UAAW,EAYJ,KAAA,iBAAmB,SAAC,GAAgC,OAAA,EAAK,aAAe,EAAK,cAAc,IAE3F,KAAA,cAAgB,SAAC,GAAgC,OAAA,EAAK,SAAW,EAAK,cAAc,IAEnF,KAAA,cAAgB,SAAC,GACjB,IACA,EAAe,OAAO,KAAK,GAAQ,IAAI,SAAA,GAAO,OAAA,EAAO,KAEvD,SAHmB,eAGH,KAAK,EAAa,KAGlC,EAAa,GAAG,OAAS,GAAK,EAAa,GAAG,OAAS,IAGvD,EAAa,KAAO,EAAa,GAAG,OAAS,GAAK,EAAa,GAAG,OAAS,KAQ1E,KAAA,SAAW,WAAe,OAAA,EAAK,UAAW,GAEzC,KAAA,gBAAkB,SAAC,GACjB,OAAA,GACD,KAAA,EAAA,UAAU,IAAY,MAAA,QACtB,KAAA,EAAA,UAAU,KAAa,MAAA,OACvB,KAAA,EAAA,UAAU,MAAc,MAAA,OACxB,KAAA,EAAA,UAAU,KAAa,MAAA,WAtCzB,KAAA,OAAS,CACZ,CAAE,GAAI,EAAG,KAAM,mBAAoB,MAAO,EAAG,UAAW,EAAA,UAAU,IAAK,YAAa,mCAAoC,eAAgB,EAAG,aAAc,EAAG,WAAY,KAAK,gBAAgB,EAAA,UAAU,MACvM,CAAE,GAAI,EAAG,KAAM,qBAAsB,MAAO,EAAG,UAAW,EAAA,UAAU,KAAM,YAAa,mBAAoB,eAAgB,EAAG,aAAc,EAAG,WAAY,KAAK,gBAAgB,EAAA,UAAU,SARhM,GAAa,QAAA,MAAA;;ACKb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IARA,IAAA,EAAA,QAAA,UACA,EAAA,QAAA,WAGA,SAAS,iBAAiB,mBAAoB,WACrC,OAAA,IAAI,EAAW,IAAI,EAAA,KAAQ,IAAI,EAAA,SAGxC,IAAA,EAAA,WAuCA,OAtCE,SAAmB,EAAmB,GAAtC,IAAA,EAAA,KAAmB,KAAA,KAAA,EAAmB,KAAA,MAAA,EAY/B,KAAA,mBAAqB,SAAC,GAC3B,EAAK,KAAK,mBAAmB,IAExB,KAAA,gBAAkB,SAAC,GACxB,EAAK,KAAK,gBAAgB,IAGpB,KAAA,eAAiB,SAAC,GACxB,EAAK,MAAM,iBAAiB,GAC5B,EAAK,mBAAmB,EAAK,MAAM,eAE7B,KAAA,YAAc,SAAC,GACrB,EAAK,MAAM,cAAc,GACzB,EAAK,gBAAgB,EAAK,MAAM,WAI3B,KAAA,iBAAmB,SAAC,GACzB,EAAK,KAAK,iBAAiB,IAGrB,KAAA,aAAe,WACrB,EAAK,MAAM,WACX,EAAK,iBAAiB,EAAK,MAAM,WAjC5B,KAAA,KAAK,gCACL,KAAA,KAAK,mCACL,KAAA,KAAK,kBAAkB,KAAK,gBAC5B,KAAA,KAAK,eAAe,KAAK,aAEzB,KAAA,KAAK,wBAAwB,KAAK,eAR3C","file":"controller.5c75d89f.js","sourceRoot":"..","sourcesContent":["const getElement = (selector: string): HTMLElement => document.querySelector(selector);\n\nexport const DOMElements = {\n  // WELCOME PAGE\n  modalWrapper: <HTMLDivElement>getElement('.modal'),\n  modalRegister: <HTMLDivElement>getElement('.modal__register'),\n  navigateToLogin: <HTMLDivElement>getElement('.link-to-login'),\n  modalLogin: <HTMLDivElement>getElement('.modal__login'),\n  navigateToRegister: <HTMLDivElement>getElement('.link-to-register'),\n\n  welcomePage: <HTMLElement>getElement('.welcome-page'),\n\n  inputRegisterEmail: <HTMLInputElement>getElement('.modal__input--register-email'),\n  inputRegisterPassword: <HTMLInputElement>getElement('.modal__input--register-password'),\n  inputRegisterUsername: <HTMLInputElement>getElement('.modal__input--register-name'),\n  inputLoginEmail: <HTMLInputElement>getElement('.modal__input--login-email'),\n  inputLoginPassword: <HTMLInputElement>getElement('.modal__input--login-password'),\n\n  buttonRegister: <HTMLButtonElement>getElement('.button--auth--register'),\n  buttonLogin: <HTMLButtonElement>getElement('.button--auth--login'),\n\n  registerErrorMessage: <HTMLParagraphElement>getElement('.modal__text--register-error'),\n  loginErrorMessage: <HTMLParagraphElement>getElement('.modal__text--login-error'),\n\n  // HABITS PAGE\n  habitsPage: <HTMLElement>getElement('.habits-page'),\n  navigateToLogOut: <HTMLAnchorElement>getElement('.nav__item--log-out'),\n\n\n}\n","import '../scss/main.scss';\nimport { AuthConfig } from './types';\nimport { DOMElements } from './dom-elems';\n\nexport class View {\n\n  get userRegisterMail() { return DOMElements.inputRegisterEmail.value }\n  get userRegisterPassword() { return DOMElements.inputRegisterPassword.value }\n  get userRegisterUsername() { return DOMElements.inputRegisterUsername.value }\n  get userLoginMail() { return DOMElements.inputLoginEmail.value }\n  get userLoginPassword() { return DOMElements.inputLoginPassword.value }\n\n  constructor() {\n    document.addEventListener('click', e => e.preventDefault());\n    DOMElements.inputRegisterEmail.select();\n  }\n\n  // WELCOME PAGE\n\n  public bindNavigateToLoginModalClick = () => {\n    DOMElements.navigateToLogin.addEventListener('click', () => {\n      DOMElements.modalRegister.style.display = 'none';\n      DOMElements.modalLogin.style.display = 'initial';\n    })\n  }\n\n  public bindNavigateToRegisterModalClick = () => {\n    DOMElements.navigateToRegister.addEventListener('click', () => {\n      DOMElements.modalRegister.style.display = 'initial';\n      DOMElements.modalLogin.style.display = 'none';\n    })\n  }\n\n  public bindRegisterClick = (handler: (config: AuthConfig) => void): void => {\n    DOMElements.buttonRegister.addEventListener('click', () => {\n      handler({\n        email: this.userRegisterMail,\n        password: this.userRegisterPassword,\n        username: this.userRegisterUsername\n      })\n    })\n  }\n\n  public bindLoginClick = (handler: any): void => {\n    DOMElements.buttonLogin.addEventListener('click', () => {\n      handler({\n        email: this.userLoginMail,\n        password: this.userLoginPassword\n      })\n    })\n  }\n\n  public showRegisterResult(isRegistered: boolean): void {\n    DOMElements.registerErrorMessage.innerText = isRegistered\n      ? ''\n      : 'Error! You need to put a correct email, 4-12 character password and 4-12 character username! :)';\n  }\n\n  public showLoginResult(isLogged: boolean): void {\n    if (!isLogged) {\n      DOMElements.loginErrorMessage.innerText = 'Login error!';\n    } else {\n      DOMElements.loginErrorMessage.innerText = '';\n      console.log('TODO login!',);\n      DOMElements.welcomePage.style.display = 'none';\n      DOMElements.habitsPage.style.display = 'grid';\n      DOMElements.modalWrapper.style.display = 'none';\n      DOMElements.modalRegister.style.display = 'none';\n      DOMElements.modalLogin.style.display = 'none';\n    }\n  }\n\n  // HABITS PAGE\n  public bindNavigateLogOutClick = (handler: any) => {\n    DOMElements.navigateToLogOut.addEventListener('click', () => {\n      handler();\n    })\n  }\n  public showLogoutResult(isLogged: boolean): void {\n    if (!isLogged) {\n      DOMElements.welcomePage.style.display = 'grid';\n      DOMElements.habitsPage.style.display = 'none';\n      DOMElements.modalWrapper.style.display = 'initial';\n      DOMElements.modalLogin.style.display = 'initial';\n    }\n  }\n\n}","export enum ColorTheme {\n  Light = 1,\n  Dark\n};\n\nexport enum HabitType {\n  Day = 0,\n  Week,\n  Month,\n  Year\n};\n","import { ColorTheme, HabitType } from './enums';\nimport { AuthConfig, Habit } from './types';\n\nexport class Model {\n  private habits: Habit[] = [];\n  isRegistered = false;\n  isLogged = false;\n\n  constructor() {\n    this.habits = [\n      { id: 1, name: 'Brush your teeth', order: 1, habitType: HabitType.Day, description: 'Brush your teeth twice everyday!', activiTyActual: 0, activiTyGoal: 2, habitColor: this.getDefaultColor(HabitType.Day) },\n      { id: 2, name: 'Talk to a stranger', order: 2, habitType: HabitType.Week, description: 'Meet new people!', activiTyActual: 0, activiTyGoal: 1, habitColor: this.getDefaultColor(HabitType.Week) },\n    ];\n    // console.log('default habits', this.habits);\n  }\n\n  // WELCOME PAGE\n\n  public validateRegister = (config: AuthConfig): boolean => this.isRegistered = this.authValidator(config);\n\n  public validateLogin = (config: AuthConfig): boolean => this.isLogged = this.authValidator(config);\n\n  private authValidator = (config: AuthConfig): boolean => {\n    const emailValidator = /\\S+@\\S+\\.\\S+/;\n    const configInputs = Object.keys(config).map(key => config[key]);\n\n    if (!emailValidator.test(configInputs[0])) { // email\n      return false;\n    }\n    if (configInputs[1].length < 4 || configInputs[1].length > 12) { // password\n      return false;\n    }\n    if (configInputs[2] && (configInputs[2].length < 4 || configInputs[2].length > 9)) { // username, only for registering\n      return false;\n    }\n    return true;\n  }\n\n  // HABITS PAGE\n\n  public onLogout = (): boolean => this.isLogged = false;\n\n  private getDefaultColor = (habitType: HabitType): string => {\n    switch (habitType) {\n      case HabitType.Day: return 'green';\n      case HabitType.Week: return 'pink';\n      case HabitType.Month: return 'blue';\n      case HabitType.Year: return 'yellow';\n    }\n  }\n\n}","import { View } from './view';\nimport { Model } from './model';\nimport { AuthConfig } from './types';\n\ndocument.addEventListener('DOMContentLoaded', (): Controller => {\n  return new Controller(new View(), new Model());\n});\n\nclass Controller {\n  constructor(public view: View, public model: Model) {\n    // WELCOME PAGE\n    this.view.bindNavigateToLoginModalClick();\n    this.view.bindNavigateToRegisterModalClick();\n    this.view.bindRegisterClick(this.handleRegister);\n    this.view.bindLoginClick(this.handleLogin);\n    // HABITS PAGE\n    this.view.bindNavigateLogOutClick(this.handleLogout);\n  }\n\n  // WELCOME PAGE\n\n  public bindRegisterResult = (isRegistered: boolean): void => {\n    this.view.showRegisterResult(isRegistered);\n  }\n  public bindLoginResult = (isLogged: boolean): void => {\n    this.view.showLoginResult(isLogged);\n  }\n\n  private handleRegister = (config: AuthConfig): void => {\n    this.model.validateRegister(config);\n    this.bindRegisterResult(this.model.isRegistered);\n  }\n  private handleLogin = (config: AuthConfig): void => {\n    this.model.validateLogin(config);\n    this.bindLoginResult(this.model.isLogged);\n  }\n\n  // HABITS PAGE\n  public bindLogoutResult = (isLogged: boolean): void => {\n    this.view.showLogoutResult(isLogged)\n  }\n\n  private handleLogout = (): void => {\n    this.model.onLogout();\n    this.bindLogoutResult(this.model.isLogged)\n  }\n\n}\n"]}